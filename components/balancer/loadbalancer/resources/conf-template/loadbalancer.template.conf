#lua modules
lua_package_path ";;$YWC_RESOURCES_LUA/?.lua;";

#backend representing custom request processing
upstream processrequest {

    server 0.0.0.1; #just an invalid address as a place holder
    balancer_by_lua_file $YWC_RESOURCES_LUA/process_request.lua;
    keepalive 10;  #connection pool
}

#proxying entrypoint
server {

    listen 8080;

    #logging of requests
    log_by_lua_file $YWC_RESOURCES_LUA/log/log.lua;

    #custom variables
    set $ywc_meta_endpoint "";
    set $ywc_meta_endpoint_type "";

    #proxy
    location / {
        proxy_pass http://processrequest/;
    }

}

#management endpoints
server {

    listen 8081;

    location /status {
        default_type 'application/json';
        content_by_lua_file $YWC_RESOURCES_LUA/endpoints/status.lua;
    }

    location /requestlog {
        default_type 'application/json';
        content_by_lua_file $YWC_RESOURCES_LUA/endpoints/requestlog.lua;
    }

    location /reload {
        default_type 'text/plain';
        content_by_lua_file $YWC_RESOURCES_LUA/endpoints/reload.lua;
    }

}
